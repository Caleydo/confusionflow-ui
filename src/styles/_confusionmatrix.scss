@import "vars";
@import '~font-awesome/scss/variables';
@import '~font-awesome/scss/mixins';

// number of columns placed to the right of the confusion matrix
$num-columns-right-area: 3;

@mixin rotateSpanLabel() {
  > span {
    display: block;
    transform: rotate(-180deg);
    writing-mode: vertical-lr;
    white-space: nowrap;
  }
}

.grid {
  display: grid;
  grid-template-areas: ". . axis-top . ." ". . label-top . label-right" "axis-left label-left matrix . chart-right" ". . . . ." ". label-bottom chart-bottom . .";
  grid-template-columns: 20px 45px auto 10px minmax(100px, 240px);
  grid-template-rows: 20px 45px auto 10px minmax(60px, 1fr);
}

.malevo-label {
  font-weight: 500;
  font-size: 16px;
}

.cfm-axis {
  background: $label-bg;
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  color: darken($label-border, 10%);

  &.axis-top {
    grid-area: axis-top;
    border-bottom: 1px solid lighten($label-border, 5%);
    padding-left: 10px;
  }

  &.axis-left {
    grid-area: axis-left;
    border-right: 1px solid lighten($label-border, 5%);
    padding-top: 10px;

    @include rotateSpanLabel();
  }
}

.label-right {
  grid-area: label-right;
  background: $label-bg;
  grid-template-columns: repeat(auto-fill, minmax(100% / $num-columns-right-area, 1fr));
  display: grid;

  div {
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
  }
}

.label-bottom {
  grid-area: label-bottom;
  background: $label-bg;
  display: flex;
  align-items: center;
  justify-content: center;

  @include rotateSpanLabel();
}

.label-top {
  grid-area: label-top;
  position: relative;
  display: grid;
  grid-template-rows: repeat(auto-fill, minmax(100%, 1fr));
}

.label-left {
  grid-area: label-left;
  position: relative;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));

  .label-cell {
    @include rotateSpanLabel();
  }
}

.chart-right {
  grid-area: chart-right;
  position: relative;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100% / $num-columns-right-area, 1fr)); // 100% for one column, 50% for 2 columns, 33% for 3 columns ...
}

.chart-bottom {
  grid-area: chart-bottom;
  position: relative;
  display: grid;
  grid-template-rows: repeat(auto-fill, minmax(100%, 1fr)); // 100% for one row, 50% for 2 rows, ...
}

.matrix-wrapper {
  grid-area: matrix;
}

.matrix {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(10, 1fr);
}

.labels,
.chart {
  display: grid;

  .bar-tooltip rect {
    opacity: 0.5;
  }
}

.label-left > .labels {
  grid-template-rows: repeat(10, 1fr);
}

.chart-right > .chart {
  grid-template-rows: repeat(10, 1fr);
}

.label-top > .labels,
.chart-bottom > .chart {
  grid-template-columns: repeat(10, 1fr);
}

.cell {
  position: relative;
  border: 1px solid #fff;
  display: flex;
  flex-direction: column;

  &.label-cell {
    align-items: center;
    justify-content: center;
    background-color: $label-bg;
  }

  > svg {
    position: absolute;
    height: 100%;
    width: 100%;
  }

  > .heat-cell {
    flex: 1;
    align-items: center;
    justify-content: center;
    display: flex;
  }
}

.chart-right,
.chart-bottom,
.matrix {
  .cell {
    outline: 1px solid #ccc;
    &.selected,
    &:active,
    &:focus,
    &:hover {
      cursor: pointer;
      outline: 2px solid $select-color;
      border: none;
      z-index: 1;
      margin: 1px;
    }
  }
}

.transpose-cells .matrix .cell {
  flex-direction: row;
}

.dashed-lines {
  stroke: $select-color;
  stroke-width: 2;
  stroke-dasharray: 1, 1;
}
